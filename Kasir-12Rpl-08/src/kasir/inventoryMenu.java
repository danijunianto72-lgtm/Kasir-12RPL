/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kasir;


import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
    import java.sql.*;
    import javax.swing.*;
    import javax.swing.table.*;

public class inventoryMenu extends javax.swing.JFrame {

    /**
     * Creates new form inventoryMenu
     */
    public inventoryMenu() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // <-- PENTING
tampilData("Semua");       // tampilkan semua menu di awal
this.setResizable(false);
this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
this.setVisible(true);

        aturTampilanTabel();
        loadKategori();
        filterKategori();
        // Shortcut tombol DELETE untuk jalankan btnDelete
tblAllMenu.getInputMap(JTable.WHEN_FOCUSED).put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0), "DeleteRow");
tblAllMenu.getActionMap().put("DeleteRow", new AbstractAction() {
    @Override
    public void actionPerformed(ActionEvent e) {
        btnEdit.doClick(); 
    }
});

    }
    private int selectedIdMenu = -1;

private void aturTampilanTabel() {
    tblAllMenu.setRowHeight(30);
        btnSimpan.setEnabled(true); // kalau mau langsung bisa tambah lagi
        

}

public void tampilData(String kategori) {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Menu");
//    model.addColumn("No");
    model.addColumn("Nama Menu");
    model.addColumn("Harga");
    model.addColumn("Stok");
    model.addColumn("Kategori");
    model.addColumn("Gambar");

    try {
        Connection conn = kasir.koneksi.dbKonek();
        String sql;

        if (kategori == null || kategori.equals("Semua")) {
            sql = "SELECT * FROM menu ORDER BY idmenu ASC";
        } else {
            sql = "SELECT * FROM menu WHERE kategori = ? ORDER BY idmenu ASC";
        }

        PreparedStatement pst = conn.prepareStatement(sql);

        if (kategori != null && !kategori.equals("Semua")) {
            pst.setString(1, kategori);
        }

        ResultSet rs = pst.executeQuery();
//int no = 1;
        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("idmenu"),
//                no++,
                rs.getString("namamenu"),
                rs.getInt("hargamenu"),
                rs.getInt("stok"),
                rs.getString("kategori"),
                rs.getString("gambar")
            });
        }

        tblAllMenu.setModel(model);
//// Sembunyikan kolom ID (kolom ke-0)
//tblAllMenu.getColumnModel().getColumn(0).setMinWidth(0);
//tblAllMenu.getColumnModel().getColumn(0).setMaxWidth(0);
//tblAllMenu.getColumnModel().getColumn(0).setWidth(0);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Gagal tampil data: " + e.getMessage());
    }
}


public void loadKategori() {
    try (Connection conn = kasir.koneksi.dbKonek();
         PreparedStatement pst = conn.prepareStatement("SELECT idkategori, namakategori FROM kategori");
         ResultSet rs = pst.executeQuery()) {

        cmbKategori.removeAllItems();
        while (rs.next()) {
            cmbKategori.addItem(rs.getString("namakategori"));
        }

    } catch (Exception e) {
        e.printStackTrace();
    }
}

public void filterKategori() {
    try (Connection conn = kasir.koneksi.dbKonek();
         PreparedStatement pst = conn.prepareStatement("SELECT namakategori FROM kategori");
         ResultSet rs = pst.executeQuery()) {

        cmbFilter.removeAllItems();
        cmbFilter.addItem("Semua"); // opsi untuk menampilkan semua menu

        while (rs.next()) {
            cmbFilter.addItem(rs.getString("namakategori"));
        }

    } catch (Exception e) {
        e.printStackTrace();
    }
}


private void clear_form() {
    txtNama.setText("");
    txtHarga.setText("");
    txtStok.setText("0");
    cmbKategori.setSelectedIndex(0);
     lblFoto.setIcon(null);
                selectedFile = null;
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAllMenu = new javax.swing.JTable();
        txtNama = new javax.swing.JTextField();
        txtStok = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbKategori = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        lblFoto = new javax.swing.JLabel();
        btnFoto = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtCari = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cmbFilter = new javax.swing.JComboBox<>();
        btnMenu = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(242, 236, 228));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(1080, 720));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(242, 236, 228));
        jPanel4.setPreferredSize(new java.awt.Dimension(1080, 720));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAllMenu.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblAllMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAllMenu.setRowHeight(30);
        tblAllMenu.setSelectionBackground(new java.awt.Color(51, 0, 51));
        tblAllMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAllMenuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAllMenu);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 360, 1000, 330));

        txtNama.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });
        jPanel4.add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 53, 242, 50));

        txtStok.setEditable(false);
        txtStok.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtStok.setText("0");
        txtStok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStokActionPerformed(evt);
            }
        });
        txtStok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStokKeyTyped(evt);
            }
        });
        jPanel4.add(txtStok, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 160, 242, 50));

        txtHarga.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHargaActionPerformed(evt);
            }
        });
        txtHarga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHargaKeyTyped(evt);
            }
        });
        jPanel4.add(txtHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 250, 55));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Nama Menu     :");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 27, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Stok Menu       :");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 134, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Harga Menu    :");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Kategori          :");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, -1, -1));

        cmbKategori.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKategoriActionPerformed(evt);
            }
        });
        jPanel4.add(cmbKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 250, 49));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(563, 126, -1, -1));

        jPanel7.setBackground(new java.awt.Color(206, 171, 141));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel7.setRequestFocusEnabled(false);
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblFoto.setBackground(new java.awt.Color(0, 102, 102));
        lblFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFoto.setPreferredSize(new java.awt.Dimension(400, 400));
        jPanel7.add(lblFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 15, 172, 171));

        jPanel4.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(815, 20, 200, -1));

        btnFoto.setBackground(new java.awt.Color(206, 171, 141));
        btnFoto.setText("Pilih Foto");
        btnFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotoActionPerformed(evt);
            }
        });
        jPanel4.add(btnFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 240, 210, 40));

        jPanel3.setBackground(new java.awt.Color(242, 236, 228));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCari.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariKeyReleased(evt);
            }
        });
        jPanel3.add(txtCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 690, 50));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Cari:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 286, 782, 79));

        btnSimpan.setBackground(new java.awt.Color(0, 204, 153));
        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jPanel4.add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 228, 99, 45));

        btnEdit.setBackground(new java.awt.Color(255, 153, 0));
        btnEdit.setText("EDIT");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel4.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 228, 96, 45));

        jButton1.setBackground(new java.awt.Color(250, 52, 88));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("HAPUS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 228, 99, 45));

        jButton3.setBackground(new java.awt.Color(102, 102, 102));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("BATAL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 228, 92, 45));

        cmbFilter.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFilterActionPerformed(evt);
            }
        });
        jPanel4.add(cmbFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 295, 220, 50));

        btnMenu.setBackground(new java.awt.Color(102, 51, 255));
        btnMenu.setForeground(new java.awt.Color(255, 255, 255));
        btnMenu.setText("TAMBAH STOK");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });
        jPanel4.add(btnMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 228, 130, 45));

        jButton4.setBackground(new java.awt.Color(255, 255, 51));
        jButton4.setText("DETAIL");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 230, 100, 40));

        jButton14.setBackground(new java.awt.Color(102, 102, 255));
        jButton14.setForeground(new java.awt.Color(255, 255, 255));
        jButton14.setText("+ Kategori");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 160, 100, 50));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 1100, 720));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 720));

        jPanel6.setBackground(new java.awt.Color(119, 85, 70));
        jPanel6.setPreferredSize(new java.awt.Dimension(194, 729));

        jPanel8.setBackground(new java.awt.Color(119, 85, 70));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setBackground(new java.awt.Color(242, 236, 228));
        jButton5.setText("Kasir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 245, 165, 50));

        jButton2.setBackground(new java.awt.Color(102, 51, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Info");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo.png"))); // NOI18N
        jLabel8.setText("jLabel1");
        jPanel8.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jButton6.setBackground(new java.awt.Color(242, 236, 228));
        jButton6.setText("Admin");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 165, 50));

        jButton7.setBackground(new java.awt.Color(242, 236, 228));
        jButton7.setText("Resep");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, 165, 50));

        jButton8.setBackground(new java.awt.Color(242, 236, 228));
        jButton8.setText("RiwayatTransaksi");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 165, 50));

        jButton9.setBackground(new java.awt.Color(242, 236, 228));
        jButton9.setText("Pembelian");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 355, 165, 50));

        jButton10.setBackground(new java.awt.Color(206, 171, 141));
        jButton10.setText("Menu");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 165, 50));

        jButton11.setBackground(new java.awt.Color(242, 236, 228));
        jButton11.setText("Inventory");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 465, 165, 50));

        jButton12.setBackground(new java.awt.Color(255, 153, 153));
        jButton12.setText("Log out");
        jButton12.setFocusTraversalPolicyProvider(true);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 650, 165, 50));

        jButton13.setBackground(new java.awt.Color(242, 236, 228));
        jButton13.setText("Pengguna");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 575, 165, 50));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 729, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(11, 11, 11)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(12, 12, 12)))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFilterActionPerformed
    String kategoriDipilih = (String) cmbFilter.getSelectedItem();
    tampilData(kategoriDipilih);
    }//GEN-LAST:event_cmbFilterActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        clear_form();
        btnSimpan.setEnabled(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (selectedIdMenu == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data dulu dari tabel!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Apakah Anda yakin ingin menghapus data ini?",
            "Konfirmasi Hapus",
            JOptionPane.YES_NO_OPTION
        );

        if (confirm == JOptionPane.YES_OPTION) {
            try (Connection conn = kasir.koneksi.dbKonek()) {
                String sql = "DELETE FROM menu WHERE idmenu=?";
                try (PreparedStatement pst = conn.prepareStatement(sql)) {
                    pst.setInt(1, selectedIdMenu);

                    int rows = pst.executeUpdate();
                    if (rows > 0) {
                        JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");

tampilData("Semua");       // tampilkan semua menu di awal

                        // reset field setelah hapus
                        txtNama.setText("");
                        txtHarga.setText("");
                        txtStok.setText("0");
                        cmbKategori.setSelectedIndex(0);
                        lblFoto.setIcon(null);
                        selectedFile = null;
                        selectedIdMenu = -1;

                        btnSimpan.setEnabled(true);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal hapus data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (selectedIdMenu == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data dulu dari tabel!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String nama = txtNama.getText();
        String hargaStr = txtHarga.getText();
        String stokStr = txtStok.getText();
        String kategori = (String) cmbKategori.getSelectedItem();

        if (nama.isEmpty() || hargaStr.isEmpty() || stokStr.isEmpty() || kategori == null) {
            JOptionPane.showMessageDialog(this, "Lengkapi semua data!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int harga = Integer.parseInt(hargaStr);
            int stok = Integer.parseInt(stokStr);

            String fileName = null;

            // cek apakah user pilih gambar baru
            if (selectedFile != null) {
                File folder = new File("images");
                if (!folder.exists()) {
                    folder.mkdir();
                }
                fileName = System.currentTimeMillis() + "_" + selectedFile.getName();
                File destFile = new File(folder, fileName);

                try (FileInputStream fis = new FileInputStream(selectedFile);
                    FileOutputStream fos = new FileOutputStream(destFile)) {
                    byte[] buffer = new byte[1024];
                    int length;
                    while ((length = fis.read(buffer)) > 0) {
                        fos.write(buffer, 0, length);
                    }
                }
            }

            // query update
            String sql;
            if (fileName != null) {
                sql = "UPDATE menu SET namamenu=?, hargamenu=?, stok=?, kategori=?, gambar=? WHERE idmenu=?";
            } else {
                sql = "UPDATE menu SET namamenu=?, hargamenu=?, stok=?, kategori=? WHERE idmenu=?";
            }

            try (Connection conn = kasir.koneksi.dbKonek();
                PreparedStatement pst = conn.prepareStatement(sql)) {

                pst.setString(1, nama);
                pst.setInt(2, harga);
                pst.setInt(3, stok);
                pst.setString(4, kategori);

                if (fileName != null) {
                    pst.setString(5, "images/" + fileName);
                    pst.setInt(6, selectedIdMenu);
                } else {
                    pst.setInt(5, selectedIdMenu);
                }

                int rows = pst.executeUpdate();
                if (rows > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil diupdate!");
tampilData("Semua");       // tampilkan semua menu di awal

                    // reset field
                    txtNama.setText("");
                    txtHarga.setText("");
                    txtStok.setText("0");
                    cmbKategori.setSelectedIndex(0);
                    lblFoto.setIcon(null);
                    selectedFile = null;
                    selectedIdMenu = -1;

                    btnSimpan.setEnabled(true);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Harga dan Stok harus angka!", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal update data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        String nama = txtNama.getText();
        String hargaStr = txtHarga.getText();
        String stokStr = txtStok.getText();
        String kategori = (String) cmbKategori.getSelectedItem();

        if (nama.isEmpty() || hargaStr.isEmpty() || stokStr.isEmpty() || selectedFile == null) {
            JOptionPane.showMessageDialog(this, "Lengkapi semua data dan pilih foto!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int harga = Integer.parseInt(hargaStr);
            int stok = Integer.parseInt(stokStr);

            // Copy file ke folder images/ di project
            File folder = new File("images");
            if (!folder.exists()) {
                folder.mkdir();
            }
            String fileName = System.currentTimeMillis() + "_" + selectedFile.getName(); // biar unik
            File destFile = new File(folder, fileName);

            try (FileInputStream fis = new FileInputStream(selectedFile);
                FileOutputStream fos = new FileOutputStream(destFile)) {
                byte[] buffer = new byte[1024];
                int length;
                while ((length = fis.read(buffer)) > 0) {
                    fos.write(buffer, 0, length);
                }
            }

            // Simpan ke database (hanya nama file)
            String sql = "INSERT INTO menu (namamenu, hargamenu, stok, kategori, gambar) VALUES (?, ?, ?, ?, ?)";

            try (
                Connection conn = (Connection)kasir.koneksi.dbKonek();
                PreparedStatement pst = conn.prepareStatement(sql)) {

                pst.setString(1, nama);
                pst.setInt(2, harga);
                pst.setInt(3, stok);
                pst.setString(4, kategori);
                pst.setString(5, "images/" + fileName); // simpan path

                int rows = pst.executeUpdate();
                if (rows > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
                    txtNama.setText("");
                    txtHarga.setText("");
                    txtStok.setText("0");
                    cmbKategori.setSelectedIndex(0);
                    lblFoto.setIcon(null);
                    selectedFile = null;
                }
tampilData("Semua");  
  int newIdMenu = 0;
    String sqlGetId = "SELECT idmenu FROM menu WHERE namamenu = ? ORDER BY idmenu DESC LIMIT 1";
    try (PreparedStatement ps2 = conn.prepareStatement(sqlGetId)) {
        ps2.setString(1, nama);
        ResultSet rs2 = ps2.executeQuery();
        if (rs2.next()) {
            newIdMenu = rs2.getInt("idmenu");
        }}
     resep resepForm = new resep();
    resepForm.setVisible(true);

    // Kirim data ke form Resep melalui setter
    resepForm.setMenuData(newIdMenu, nama);

    // Tutup form InventoryMenu
    this.dispose();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Harga dan Stok harus angka!", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal simpan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void txtCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyReleased
        String cari = txtCari.getText(); // ambil kata yang diketik user

        DefaultTableModel tabel = new DefaultTableModel();
        tabel.addColumn("idMenu");
        tabel.addColumn("namaMenu");
        tabel.addColumn("hargaMenu");
        tabel.addColumn("stokMenu");
        tabel.addColumn("kategori");
        tabel.addColumn("gambar"); // tambahin kolom gambar
        int stokKosong = 0; // counter stok kosong

        try {
            Connection conn = (Connection) kasir.koneksi.dbKonek();
            String sql = "SELECT * FROM menu WHERE namaMenu ILIKE ?";
            // ILIKE = case-insensitive (kalau PostgreSQL)

            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, "%" + cari + "%"); // wildcard pencarian
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                int stok = rs.getInt(4); // kolom stokMenu (index 4)
                if (stok == 0) {
                    stokKosong++; // tambah counter jika stok habis
                }

                tabel.addRow(new Object[]{
                    rs.getInt("idmenu"),
                    rs.getString("namamenu"),
                    rs.getInt("hargamenu"),
                    stok,
                    rs.getString("kategori"),
                    rs.getString("gambar") // jangan lupa gambar ikut ditampilkan
                });
            }

            tblAllMenu.setModel(tabel);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtCariKeyReleased

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariActionPerformed

    private void btnFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotoActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            try {
                // Tampilkan preview dengan ukuran fix 170 x 170
                ImageIcon icon = new ImageIcon(selectedFile.getAbsolutePath());
                Image image = icon.getImage().getScaledInstance(170,170, Image.SCALE_SMOOTH);

                lblFoto.setIcon(new ImageIcon(image));
                lblFoto.setHorizontalAlignment(JLabel.CENTER);
                lblFoto.setVerticalAlignment(JLabel.CENTER);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal memuat foto: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnFotoActionPerformed

    private void cmbKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbKategoriActionPerformed

    private void txtHargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHargaKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE && c != KeyEvent.VK_DELETE) {
            evt.consume(); // batalkan input
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaKeyTyped

    private void txtHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaActionPerformed

    private void txtStokKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStokKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE && c != KeyEvent.VK_DELETE) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtStokKeyTyped

    private void txtStokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStokActionPerformed

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void tblAllMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAllMenuMouseClicked
        int row = tblAllMenu.getSelectedRow(); // ambil baris yang dipilih

        if (row != -1) {
            // ambil data dari tabel
            String idMenu = tblAllMenu.getValueAt(row, 0).toString();
            String namaMenu = tblAllMenu.getValueAt(row, 1).toString();
            String hargaMenu = tblAllMenu.getValueAt(row, 2).toString();
            String stokMenu = tblAllMenu.getValueAt(row, 3).toString();
            String kategoriNama = tblAllMenu.getValueAt(row, 4).toString();
            String gambarPath = tblAllMenu.getValueAt(row, 5).toString(); // ambil path gambar

            // isi ke textfield
            txtNama.setText(namaMenu);
            txtHarga.setText(hargaMenu);
            txtStok.setText(stokMenu);

            // pilih kategori di combobox
            for (int i = 0; i < cmbKategori.getItemCount(); i++) {
                if (cmbKategori.getItemAt(i).toString().equalsIgnoreCase(kategoriNama)) {
                    cmbKategori.setSelectedIndex(i);
                    break;
                }
            }

            // tampilkan foto
            try {
                ImageIcon icon = new ImageIcon(gambarPath);
                Image img = icon.getImage().getScaledInstance(170, 170, Image.SCALE_SMOOTH);
                lblFoto.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                lblFoto.setIcon(null);
                System.out.println("Gagal load gambar: " + e.getMessage());
            }

            // simpan id menu ke variabel global supaya bisa dipakai saat edit/hapus
            selectedIdMenu = Integer.parseInt(idMenu);
            btnSimpan.setEnabled(false);
        }
    }//GEN-LAST:event_tblAllMenuMouseClicked

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
   int selectedRow = tblAllMenu.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih menu dulu dari tabel!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Ambil ID dan nama menu dari tabel
    int idMenu = Integer.parseInt(tblAllMenu.getValueAt(selectedRow, 0).toString());
    String namaMenu = tblAllMenu.getValueAt(selectedRow, 1).toString();

    // Panggil dialog tambah stok
    JDialogTambahStok dialog = new JDialogTambahStok(this, true);
    dialog.setIdMenu(idMenu);
    dialog.setNamaMenu(namaMenu);
    dialog.loadInfoBahan(); // tampilkan bahan dan kebutuhan per menu
    dialog.setLocationRelativeTo(this);
    dialog.setVisible(true);

    // setelah dialog ditutup, refresh data menu
    tampilData("Semua");
    }//GEN-LAST:event_btnMenuActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
 int selectedRow = tblAllMenu.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih menu terlebih dahulu dari tabel!");
        return;
    }

    // Ambil idmenu dari kolom tabel
    int idMenu = Integer.parseInt(tblAllMenu.getValueAt(selectedRow, 0).toString()); // pastikan kolom 0 = idmenu
    String namaMenu = tblAllMenu.getValueAt(selectedRow, 1).toString(); // kolom 1 = namamenu

    try (Connection conn = kasir.koneksi.dbKonek()) {
        String sql = """
            SELECT b.namabahan, r.jumlah_bahan, b.satuan
            FROM resep r
            JOIN bahan b ON r.idbahan = b.idbahan
            WHERE r.idmenu = ?
        """;

        try (PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setInt(1, idMenu);
            ResultSet rs = pst.executeQuery();

            StringBuilder sb = new StringBuilder();
            sb.append("Resep untuk menu: ").append(namaMenu).append("\n\n");

            boolean adaData = false;
            while (rs.next()) {
                adaData = true;
                sb.append("- ")
                  .append(rs.getString("namabahan"))
                  .append(" : ")
                  .append(rs.getDouble("jumlah_bahan"))
                  .append(" ")
                  .append(rs.getString("satuan"))
                  .append("\n");
            }

            if (!adaData) {
                sb.append("⚠️ Tidak ada data resep untuk menu ini.");
            }

            // tampilkan di popup (bisa JDialog atau JOptionPane)
            JTextArea textArea = new JTextArea(sb.toString());
            textArea.setEditable(false);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            JScrollPane scrollPane = new JScrollPane(textArea);
            scrollPane.setPreferredSize(new java.awt.Dimension(350, 250));

            JOptionPane.showMessageDialog(this, scrollPane, "Detail Resep", JOptionPane.INFORMATION_MESSAGE);
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Gagal memuat detail resep: " + e.getMessage());
        e.printStackTrace();
    }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        menuKasir ksr= new menuKasir();
        ksr.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        admin ad= new admin();
        ad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
resep res = new resep();
res.setVisible(true);
this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        historyKasir hk = new  historyKasir();
        hk.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        pembelian pb = new pembelian();
        pb.setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        inventoryMenu im = new inventoryMenu();
        im.setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        bahan bhn = new bahan();
        bhn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this,
            "Yakin ingin logout?",
            "Konfirmasi Logout",
            JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            // Reset Session
            Session.username = null;
            Session.namaPelayan = null;
            Session.role = null;

            // Kembali ke form login
            login lg = new login();
            lg.setVisible(true);

            this.dispose(); // tutup halaman sekarang
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        user pu = new user();
        pu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        info in= new info();
        in.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
 jDialogKategori dialog = new jDialogKategori(this, true);
    dialog.setVisible(true);
    loadKategori(); // reload combobox setelah dialog ditutup        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed
private File selectedFile;


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inventoryMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inventoryMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inventoryMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inventoryMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inventoryMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFoto;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox<String> cmbFilter;
    private javax.swing.JComboBox<String> cmbKategori;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JTable tblAllMenu;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtStok;
    // End of variables declaration//GEN-END:variables
}
